module kernel
    contains
    ! CUDA kernel. Each thread takes care of one element of c
    attributes(global) subroutine vecAdd_kernel(n, a, b, c)
        integer, value :: n
        real(8), device :: a(n,n,n), b(n,n,n), c(n,n,n)
        integer :: id_x, id_y, id_z
 
        ! Get our global thread ID
        id_x = (blockidx%x-1)*blockdim%x + threadidx%x
		id_y = (blockidx%y-1)*blockdim%y + threadidx%y
		id_z = (blockidx%z-1)*blockdim%z + threadidx%z
		if (id_x <= n .and. id_y <= n .and. id_z <= n) then
			c(id_x,id_y,id_z) = a(id_x,id_y,id_z) + b(id_x,id_y,id_z)
        end if
    end subroutine vecAdd_kernel
end module kernel
